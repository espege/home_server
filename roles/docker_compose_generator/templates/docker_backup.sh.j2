#!/bin/bash

DESTINATION_DIR="/{{ zfs_pool_name }}/{{ onedrive_config.directory_name | default('OneDrive') }}/Backups"
LOG_DESTINATION="/var/log/docker_backup.log"
FINAL_USER="onedrive"
FINAL_GROUP="onedrive"
DOCKER_APP_NAME=$1
BACKUP_PATHS=$2

function validate_inputs() {
    if [ -z "$BACKUP_PATHS" ]; then
        echo "No input path provided to backup. Exiting."
        return 1
    fi
    if [ ! -d "$DESTINATION_DIR" ]; then
        echo "Destination directory $DESTINATION_DIR does not exist. Creating it..."
        mkdir -p "$DESTINATION_DIR"
        chown "${FINAL_USER}":"${FINAL_USER}" "$DESTINATION_DIR"
    fi
}

function set_permissions() {
    chown -R "${FINAL_USER}":"${FINAL_GROUP}" "$DESTINATION_DIR"
    chmod -R 750 "$DESTINATION_DIR"
}

function append_to_log() {
    MESSAGE=$1
    if [ -z "$LOG_DESTINATION" ]; then
        echo "No known log destination. Exiting."
        return 1
    fi
    if [ -z "$MESSAGE" ]; then
        echo "Message is empty. Exiting."
        return 1
    fi
    echo "--- $(date) --- $MESSAGE ---" >> $LOG_DESTINATION
    # Cleanup
    tail -n 1000 $LOG_DESTINATION > "${LOG_DESTINATION}.tmp" && mv "${LOG_DESTINATION}.tmp" $LOG_DESTINATION
}

# MAIN

validate_inputs
append_to_log "Starting backup script for $DOCKER_APP_NAME"

ARCHIVE_NAME="$DESTINATION_DIR/docker_backup_${DOCKER_APP_NAME}.tar.gz"
tar -czvf "$ARCHIVE_NAME" $BACKUP_PATHS >> $LOG_DESTINATION 2>&1
if [ $? -ne 0 ]; then
    append_to_log "Error during backup of $BACKUP_PATHS. Check the log at $LOG_DESTINATION for details."
    exit 1
else
    append_to_log "Backup of $BACKUP_PATHS completed successfully. Archive: $ARCHIVE_NAME"
    echo "Successfully backup up $DOCKER_APP_NAME"
fi
set_permissions
append_to_log "Finished backup script for $DOCKER_APP_NAME"
